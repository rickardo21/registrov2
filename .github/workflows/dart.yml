name: iOS-ipa-build

on:
  workflow_dispatch:

jobs:
  build-ios:
    name: üéâ iOS Build
    runs-on: macos-14

    steps:
      # 1Ô∏è‚É£ Checkout del repository
      - uses: actions/checkout@v3

      # 2Ô∏è‚É£ Cache delle dipendenze Flutter e Pods
      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            ios/Pods
            ios/Podfile.lock
          key: ${{ runner.os }}-flutter-${{ hashFiles('pubspec.yaml') }}

      # 3Ô∏è‚É£ Setup Flutter
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64

      # 4Ô∏è‚É£ Pulizia e installazione dipendenze Flutter
      - run: flutter clean
      - run: flutter pub get

      # 5Ô∏è‚É£ Aggiorna Podfile e installa pods (forza iOS 14)
      - run: |
          cd ios
          sed -i.bak "1s/.*/platform :ios, '14.0'/" Podfile
          pod repo update
          pod install --repo-update
        shell: bash

      # 6Ô∏è‚É£ Setup Xcode
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: 'latest-stable'

      # 7Ô∏è‚É£ Build iOS release senza code signing
      - run: flutter build ios --release --no-codesign

      # 8Ô∏è‚É£ Prepara cartella Payload e crea IPA
      - run: |
          cd build/ios/iphoneos
          mkdir -p Payload
          mv Runner.app Payload/
          zip -qr FlutterIpaExport.ipa Payload
        shell: bash

      # 9Ô∏è‚É£ Carica IPA su release esistente
      - name: Upload IPA to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/ios/iphoneos/FlutterIpaExport.ipa
          tag: v1.0        # <-- inserisci qui il tag della tua release esistente
          overwrite: true
          body: "Release build IPA"
